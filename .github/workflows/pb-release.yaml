name: BudLight (Release)
on:
  workflow_dispatch:
  pull_request: # runs `make pr`
    branches:
      - main
      - 'release/**'
  push:
    branches:
      - main
      - 'release/**'
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_DEFAULT_REGION: us-east-1
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  CMAKE_BUILD_TYPE: 'RelWithDebInfo'
  DOCKER_HOST: 'unix:///run/user/1006/docker.sock'
  GITHUB_REPOSITORY: budlight
  LANG: 'C.UTF-8'
  LC_ALL: 'C.UTF-8'
  PROJECT: 'budlight'
  REGISTRY: '001978429989.dkr.ecr.us-east-1.amazonaws.com'

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest
    if: "!startsWith(github.event.head_commit.message, 'UPDATE: version')"
    # this `if` is needed so that version-bump doesn't fully retrigger a new GHA
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      # with:
      #   ref: ${{ github.ref }} # On PR, this looks like: "refs/pull/:prNumber/merge"
      #   fetch-depth: 0
      #   token: ${{ secrets.SIMPLEROSE_CI_PAT }}

    # - name: Checkout submodules
    #   run: |
    #     # Authenticate for private submodules
    #     eval $(ssh-agent -s)
    #     ssh-add ~/.ssh/id_rsa
    #     # Download submodules
    #     git submodule update --init --recursive

    - name: Changelog
      uses: scottbrenner/generate-changelog-action@master
      id: Changelog
      env:
        REPO: ${{ github.repository }}

    - name: Run PR Job
      id: run-pr-job
      if: ${{ github.event_name == 'pull_request' }}
      run: |
        make pr -n
        make pr

    - name: Run CI Job
      id: run-ci-job
      if: ${{ github.event_name == 'push' && github.event.ref == 'refs/heads/main' }}
      run: |
        make ci -n
        make ci
        make binary-push -n
        make binary-push

    - name: Commit new version and Prep Artifact
      id: version-bump
      if: ${{ github.event_name == 'push' && github.event.ref == 'refs/heads/main' }}
      run: |
        make version-bump-minor -n
        make version-bump-minor
        git config --global user.name "SimpleRose CI Bot"
        git config --global user.email "ops+gha@simplerose.com"
        git add cicd/version.txt
        git commit -m 'UPDATE: version'
        git push

    - name: Release
      id: run-release-job
      if: ${{ github.event_name == 'push' && github.event.ref == 'refs/heads/main' }}
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          ${{ steps.Changelog.outputs.changelog }}
        draft: true
        prerelease: false

# Until we have a prod account, keep this commented out
# This, similar to the CICD job, promotes the latest container
# to rosette.  This will change as the container should change
# in the future.

#  cd-prod:
#    name: CD (Staging/Prod)
#    runs-on: budlight
#    needs: ci
#    if: ${{ github.event_name == 'push' && github.event.ref == 'refs/heads/main' }}
#    steps:
#
#    - name: Checkout Repository
#      id: checkout_repo
#      uses: actions/checkout@v2
#      with:
#        ref: ${{ github.ref }} # On PR, this looks like: "refs/pull/:prNumber/merge"
#        fetch-depth: 0
#        token: ${{ secrets.SIMPLEROSE_CI_PAT }}
#
#    # creates the following ENV VARs
#    # ROSETTE_AMQP_CREDENTIALS_DEV_AMQP_HOST
#    # ROSETTE_AMQP_CREDENTIALS_DEV_AMQP_PASSWORD
#    - name: Get Secrets
#      id: get_secrets
#      uses: aws-actions/aws-secretsmanager-get-secrets@v1
#      with:
#        secret-ids: |
#          rosette/amqp/credentials/dev
#        parse-json-secrets: true
#
#    - name: Update in dev.amqp
#      id: aws_creds_parse
#      run: |
#        jq --arg host     "$ROSETTE_AMQP_CREDENTIALS_DEV_AMQP_HOST"         '.host' cicd/dev.amqp > cicd/dev.amqp
#        jq --arg password "$ROSETTE_AMQP_CREDENTIALS_DEV_AMQP_PASSWORD" '.password' cicd/dev.amqp > cicd/dev.amqp
#        cat cicd/dev.amqp
#
#    - name: Development Deploy
#      id: deploy_dev
#      run: |
#        make cd -n
#        make cd
#
#  alerts:
#    name: Post Alerts
#    runs-on: ubuntu-latest
#    needs: [cd-prod]
#    if: needs.cd.result != 'success'
#
#    steps:
#    - name: Alert Slack
#      id: slack_alert
#      uses: slackapi/slack-github-action@v1.24.0
#      env:
#        SLACK_BOT_TOKEN: ${{ secrets.SLACK_TOKEN_GITHUB_ACTIONS }}
#      with:
#        channel-id: 'CRZ822ES2' # this is for #devops
#        payload: |
#          {
#            "text": "Budlight GHA Build Result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
#            "blocks": [
#              {
#                "type": "section",
#                "text": {
#                  "type": "mrkdwn",
#                  "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
#                }
#              }
#            ]
#          }
